services:
  mongo:
    image: mongo:${MONGO_VERSION}
    command: ["--replSet", "${MONGO_REPLICA_SET}", "--port", "${MONGO_PORT}"]
    healthcheck:
      test: test $$(echo "rs.initiate().ok || rs.status().ok" | mongo --port ${MONGO_PORT} --quiet) -eq 1      
      interval: 10s
      start_period: 30s
    volumes:
      - any-sync-mongo:/data
    restart: unless-stopped
    
  redis:
    image: redis/redis-stack-server:${REDIS_VERSION}
    command: ["redis-server", "--dir", "/data", "--appendonly", "yes", "--maxmemory", "${REDIS_MAXMEMORY}", "--maxmemory-policy", "noeviction", "--protected-mode", "no", "--loadmodule", "/opt/redis-stack/lib/redisbloom.so"]
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "-p", "${REDIS_PORT}", "incr", "ping" ]
      interval: 10s
      timeout: 30s
      retries: 3
    restart: unless-stopped

  minio:
    image: minio/minio:${MINIO_VERSION}
    command: ["server", "/data", "--console-address", ":${MINIO_WEB_PORT}", "--address", ":${MINIO_PORT}"]
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    ports:
      - ${MINIO_PORT}:${MINIO_PORT}
      - ${MINIO_WEB_PORT}:${MINIO_WEB_PORT}
    healthcheck:
      test: bash -c ':> /dev/tcp/127.0.0.1/${MINIO_PORT}' || exit 1
      interval: 5s
      timeout: 10s
      retries: 3
    volumes:
      - any-sync-minio:/data
    networks:
      default:
        aliases:
          - "${MINIO_BUCKET}.minio" # <bucket-name>.<endpoint-name>
    restart: unless-stopped
  
  create_bucket:
    build: 
      context: .
      dockerfile: Dockerfile.create-bucket
    env_file: stack.env
    volumes:
      - any-sync-filenode-aws:/aws
    depends_on:
      minio:
        condition: service_healthy
  
  create_config:
    build:
      context: .
      dockerfile: Dockerfile.create-config
    volumes:
      - config-etc:/go/etc
      - any-sync-node-1-etc:/go/etc/any-sync-node-1
      - any-sync-node-2-etc:/go/etc/any-sync-node-2
      - any-sync-node-3-etc:/go/etc/any-sync-node-3
      - any-sync-coordinator-etc:/go/etc/any-sync-coordinator
      - any-sync-consensusnode-etc:/go/etc/any-sync-consensusnode
      - any-sync-filenode-etc:/go/etc/any-sync-filenode


  any-sync-node-1:
      image: ghcr.io/anyproto/any-sync-node:latest
      ports:
        - ${ANY_SYNC_NODE_1_PORT}:${ANY_SYNC_NODE_1_PORT} 
        - ${ANY_SYNC_NODE_1_QUIC_PORT}:${ANY_SYNC_NODE_1_QUIC_PORT} 
      depends_on:
        any-sync-coordinator:
          condition: service_started 
      volumes:
        - any-sync-node-1-networkStore:/networkStore
        - any-sync-node-1-anyStorage:/anyStorage
        - any-sync-node-1-storage:/storage
        - any-sync-node-1-etc:/etc/any-sync-node
      restart: unless-stopped

  any-sync-node-2:
      image: ghcr.io/anyproto/any-sync-node:latest
      ports:
        - ${ANY_SYNC_NODE_2_PORT}:${ANY_SYNC_NODE_2_PORT} 
        - ${ANY_SYNC_NODE_2_QUIC_PORT}:${ANY_SYNC_NODE_2_QUIC_PORT} 
      depends_on:
        any-sync-coordinator:
          condition: service_started 
      volumes:
        - any-sync-node-2-networkStore:/networkStore
        - any-sync-node-2-anyStorage:/anyStorage
        - any-sync-node-2-storage:/storage
        - any-sync-node-2-etc:/etc/any-sync-node
      restart: unless-stopped

  any-sync-node-3:
      image: ghcr.io/anyproto/any-sync-node:latest
      ports:
        - ${ANY_SYNC_NODE_3_PORT}:${ANY_SYNC_NODE_3_PORT} 
        - ${ANY_SYNC_NODE_3_QUIC_PORT}:${ANY_SYNC_NODE_3_QUIC_PORT} 
      depends_on:
        any-sync-coordinator:
          condition: service_started 
      volumes:
        - any-sync-node-3-networkStore:/networkStore
        - any-sync-node-3-anyStorage:/anyStorage
        - any-sync-node-3-storage:/storage
        - any-sync-node-3-etc:/etc/any-sync-node
      restart: unless-stopped

  any-sync-coordinator:
      image: ghcr.io/anyproto/any-sync-coordinator:latest
      ports:
        - ${ANY_SYNC_COORDINATOR_PORT}:${ANY_SYNC_COORDINATOR_PORT} 
        - ${ANY_SYNC_COORDINATOR_QUIC_PORT}:${ANY_SYNC_COORDINATOR_QUIC_PORT} 
      volumes:
        - "any-sync-coordinator-networkStore:/networkStore"
        - any-sync-coordinator-etc:/etc/any-sync-coordinator
      depends_on:
        create_config:
          condition: service_completed_successfully
        mongo:
          condition: service_healthy 
      restart: unless-stopped

  any-sync-consensusnode:
      image: ghcr.io/anyproto/any-sync-consensusnode:latest
      ports:
        - ${ANY_SYNC_CONSENSUSNODE_PORT}:${ANY_SYNC_CONSENSUSNODE_PORT} 
        - ${ANY_SYNC_CONSENSUSNODE_QUIC_PORT}:${ANY_SYNC_CONSENSUSNODE_QUIC_PORT} 
      volumes:
        - "any-sync-consensusnode-networkStore:/networkStore"
        - any-sync-consensusnode-etc:/etc/any-sync-consensusnode
      depends_on:
        mongo:
          condition: service_healthy 
        any-sync-coordinator:
          condition: service_started 
      restart: unless-stopped

  any-sync-filenode:
      image: ghcr.io/anyproto/any-sync-filenode:latest
      ports:
        - ${ANY_SYNC_FILENODE_PORT}:${ANY_SYNC_FILENODE_PORT} 
        - ${ANY_SYNC_FILENODE_QUIC_PORT}:${ANY_SYNC_FILENODE_QUIC_PORT} 
      volumes:
        - "any-sync-filenode-networkStore:/networkStore"
        - "any-sync-filenode-aws:/root/.aws:ro" 
        - any-sync-filenode-etc:/etc/any-sync-filenode
      depends_on:
        redis:
          condition: service_healthy
        minio:
          condition: service_healthy 
        any-sync-coordinator:
          condition: service_started 
      restart: unless-stopped

volumes:
  config-etc:
  any-sync-node-1-etc:
  any-sync-node-2-etc:
  any-sync-node-3-etc:
  any-sync-coordinator-etc:
  any-sync-consensusnode-etc:
  any-sync-filenode-etc:
  any-sync-filenode-aws:
  any-sync-filenode-networkStore:
  any-sync-consensusnode-networkStore:
  any-sync-coordinator-networkStore:
  any-sync-minio:
  any-sync-mongo:
  any-sync-node-1-storage:
  any-sync-node-1-networkStore:
  any-sync-node-1-anyStorage:
  any-sync-node-2-storage:
  any-sync-node-2-networkStore:
  any-sync-node-2-anyStorage:
  any-sync-node-3-storage:
  any-sync-node-3-networkStore:
  any-sync-node-3-anyStorage:
